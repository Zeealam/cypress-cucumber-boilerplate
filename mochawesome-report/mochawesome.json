{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-02T11:37:14.078Z",
    "end": "2020-05-02T11:37:40.394Z",
    "duration": 26316,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "36aa17a3-b4b3-48db-889d-75104db46f50",
    "title": "",
    "fullFile": "cypress/integration/features/SampleFunctionalTest.feature",
    "file": "cypress/integration/features/SampleFunctionalTest.feature",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "846e5b13-097e-4e58-86b7-07602402fa41",
        "title": "Sample Test",
        "fullFile": "",
        "file": "",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "check valid login test",
            "fullTitle": "Sample Test check valid login test",
            "duration": 11783,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
            "err": {},
            "isRoot": false,
            "uuid": "a489adf3-7e88-4bc0-b7a6-42260f4d03be",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "select random dropdown value",
            "fullTitle": "Sample Test select random dropdown value",
            "duration": 4142,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
            "err": {},
            "isRoot": false,
            "uuid": "a6d0197f-c6e5-4b3f-9812-f238506383f8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "click random link",
            "fullTitle": "Sample Test click random link",
            "duration": 10176,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
            "err": {},
            "isRoot": false,
            "uuid": "f0d71a04-b8c5-473d-8223-87a66cd05422",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "a489adf3-7e88-4bc0-b7a6-42260f4d03be",
          "a6d0197f-c6e5-4b3f-9812-f238506383f8",
          "f0d71a04-b8c5-473d-8223-87a66cd05422"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 26101,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2020
}